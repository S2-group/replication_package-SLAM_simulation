<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, hector, karto]"/>
  <arg name="slam_toolbox" default="false"/>
  <arg name="karto_slam" default="false"/>
  <arg name="path" default="$(env PATH_TO_BAG)"/>
  <!-- <arg name="node_start_delay" default="2.0" />  -->
  
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)"/>
  </include>
  
  <include file="$(find turtlebot3_gazebo)/launch/turtlebot3_arena.launch">
      <arg name="model" value="$(arg model)"/>
  </include>
  
  <group if="$(arg slam_toolbox)">
    <include file="$(find slam_toolbox)/launch/online_sync.launch">
    </include>
  </group>

  <group unless="$(arg slam_toolbox)">
    <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
      <arg name="model" value="$(arg model)"/>
      <arg name="configuration_basename" value="$(arg configuration_basename)"/>
    </include>
  </group>

  <node pkg="rosbag" required="true" type="play" name="rosbag_play" output="screen" args="-d 3 $(arg path)" />
  <node pkg="rosbag" type="record" name="rosbag_record" args="-a --lz4 -q -o $(arg path)"/>
  <node pkg="s2_slam_sim" name="resource_meter" type="resource_meter.py"/>
  <node pkg="s2_slam_sim" type="dumpcap_recorder.py" name="dumpcap_recorder"/>
  <!-- <node pkg="s2_slam_sim" name="power_recorder" type="power_recorder.py"/> -->
</launch>

